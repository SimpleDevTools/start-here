name: CI

on:
  push:
  pull_request:

jobs:
  build:
    name: "Build and Test"
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v3

      - name: "setup PHP 8.4"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer
          coverage: none

      - name: "get composer cache directory"
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: "create auth.json file"
        run: |
          echo '{
            "http-basic": {
              "composer.fluxui.dev": {
                "username": "${{ secrets.FLUX_COMPOSER_USERNAME }}",
                "password": "${{ secrets.FLUX_COMPOSER_PASSWORD }}"
              }
            }
          }' > auth.json

      - name: "cache dependencies"
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "install dependencies"
        run: composer install --prefer-dist

      - name: "run pint"
        run: php ./vendor/bin/pint --test

      - name: "setup node v22.11.0"
        uses: actions/setup-node@v3
        with:
          node-version: 22.11.0
          cache: "npm"

      - name: "install node dependencies"
        run: npm ci

      - name: "run blade formatter"
        run: './node_modules/.bin/blade-formatter "./resources/**/*.blade.php" -c -d'

      - name: "run PHPStan"
        run: php ./vendor/bin/phpstan analyse

      - name: "copy .env.example to .env"
        run: cp .env.example .env

      - name: "set the application key"
        run: php artisan key:generate

      - name: "run artisan migrate"
        run: php artisan migrate

      - name: "build assets"
        run: npm run build

      - name: "run tests"
        run: php artisan test

      - name: "run artisan config:cache"
        run: php artisan config:cache

      - name: "run artisan event:cache"
        run: php artisan event:cache

      - name: "run artisan route:cache"
        run: php artisan route:cache

      - name: "run artisan view:cache"
        run: php artisan view:cache

      - name: "run artisan optimize"
        run: php artisan optimize
  # deploy:
  #   name: "deploy"
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: "Hit deploy URL"
  #       run: curl -X POST -d '' https://forge.laravel.com/servers/${GITHUB_FORGE_SERVER}/sites/${GITHUB_FORGE_SITE}/deploy/http?token=${GITHUB_FORGE_TOKEN}
